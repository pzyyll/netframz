// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zonesvr.proto

#ifndef PROTOBUF_zonesvr_2eproto__INCLUDED
#define PROTOBUF_zonesvr_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class ChatReq;
class ChatReqDefaultTypeInternal;
extern ChatReqDefaultTypeInternal _ChatReq_default_instance_;
class ChatRsp;
class ChatRspDefaultTypeInternal;
extern ChatRspDefaultTypeInternal _ChatRsp_default_instance_;
class ChatStat;
class ChatStatDefaultTypeInternal;
extern ChatStatDefaultTypeInternal _ChatStat_default_instance_;
class LoginReq;
class LoginReqDefaultTypeInternal;
extern LoginReqDefaultTypeInternal _LoginReq_default_instance_;
class LoginRsp;
class LoginRspDefaultTypeInternal;
extern LoginRspDefaultTypeInternal _LoginRsp_default_instance_;
class MsgCmd;
class MsgCmdDefaultTypeInternal;
extern MsgCmdDefaultTypeInternal _MsgCmd_default_instance_;
class MsgRet;
class MsgRetDefaultTypeInternal;
extern MsgRetDefaultTypeInternal _MsgRet_default_instance_;
class Persion;
class PersionDefaultTypeInternal;
extern PersionDefaultTypeInternal _Persion_default_instance_;
class ZonePoint;
class ZonePointDefaultTypeInternal;
extern ZonePointDefaultTypeInternal _ZonePoint_default_instance_;
class ZoneStat;
class ZoneStatDefaultTypeInternal;
extern ZoneStatDefaultTypeInternal _ZoneStat_default_instance_;
class ZoneSyn;
class ZoneSynDefaultTypeInternal;
extern ZoneSynDefaultTypeInternal _ZoneSyn_default_instance_;
class ZoneSyn_Point;
class ZoneSyn_PointDefaultTypeInternal;
extern ZoneSyn_PointDefaultTypeInternal _ZoneSyn_Point_default_instance_;

namespace protobuf_zonesvr_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_zonesvr_2eproto

enum MsgRet_ErrCode {
  MsgRet_ErrCode_SUCCESS = 0,
  MsgRet_ErrCode_FAIL = -1,
  MsgRet_ErrCode_MsgRet_ErrCode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MsgRet_ErrCode_MsgRet_ErrCode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MsgRet_ErrCode_IsValid(int value);
const MsgRet_ErrCode MsgRet_ErrCode_ErrCode_MIN = MsgRet_ErrCode_FAIL;
const MsgRet_ErrCode MsgRet_ErrCode_ErrCode_MAX = MsgRet_ErrCode_SUCCESS;
const int MsgRet_ErrCode_ErrCode_ARRAYSIZE = MsgRet_ErrCode_ErrCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgRet_ErrCode_descriptor();
inline const ::std::string& MsgRet_ErrCode_Name(MsgRet_ErrCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgRet_ErrCode_descriptor(), value);
}
inline bool MsgRet_ErrCode_Parse(
    const ::std::string& name, MsgRet_ErrCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgRet_ErrCode>(
    MsgRet_ErrCode_descriptor(), name, value);
}
enum MsgCmd_MsgId {
  MsgCmd_MsgId_MSGINIT = 0,
  MsgCmd_MsgId_LOGINREQ = 4097,
  MsgCmd_MsgId_LOGINRSP = 4098,
  MsgCmd_MsgId_ZONESYN = 8193,
  MsgCmd_MsgId_ZONESTAT = 8194,
  MsgCmd_MsgId_CHATREQ = 12289,
  MsgCmd_MsgId_CHATRSP = 12290,
  MsgCmd_MsgId_CHATSTAT = 12291,
  MsgCmd_MsgId_MsgCmd_MsgId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MsgCmd_MsgId_MsgCmd_MsgId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MsgCmd_MsgId_IsValid(int value);
const MsgCmd_MsgId MsgCmd_MsgId_MsgId_MIN = MsgCmd_MsgId_MSGINIT;
const MsgCmd_MsgId MsgCmd_MsgId_MsgId_MAX = MsgCmd_MsgId_CHATSTAT;
const int MsgCmd_MsgId_MsgId_ARRAYSIZE = MsgCmd_MsgId_MsgId_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgCmd_MsgId_descriptor();
inline const ::std::string& MsgCmd_MsgId_Name(MsgCmd_MsgId value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgCmd_MsgId_descriptor(), value);
}
inline bool MsgCmd_MsgId_Parse(
    const ::std::string& name, MsgCmd_MsgId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgCmd_MsgId>(
    MsgCmd_MsgId_descriptor(), name, value);
}
// ===================================================================

class MsgRet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MsgRet) */ {
 public:
  MsgRet();
  virtual ~MsgRet();

  MsgRet(const MsgRet& from);

  inline MsgRet& operator=(const MsgRet& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRet& default_instance();

  static inline const MsgRet* internal_default_instance() {
    return reinterpret_cast<const MsgRet*>(
               &_MsgRet_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(MsgRet* other);

  // implements Message ----------------------------------------------

  inline MsgRet* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgRet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgRet& from);
  void MergeFrom(const MsgRet& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgRet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MsgRet_ErrCode ErrCode;
  static const ErrCode SUCCESS =
    MsgRet_ErrCode_SUCCESS;
  static const ErrCode FAIL =
    MsgRet_ErrCode_FAIL;
  static inline bool ErrCode_IsValid(int value) {
    return MsgRet_ErrCode_IsValid(value);
  }
  static const ErrCode ErrCode_MIN =
    MsgRet_ErrCode_ErrCode_MIN;
  static const ErrCode ErrCode_MAX =
    MsgRet_ErrCode_ErrCode_MAX;
  static const int ErrCode_ARRAYSIZE =
    MsgRet_ErrCode_ErrCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ErrCode_descriptor() {
    return MsgRet_ErrCode_descriptor();
  }
  static inline const ::std::string& ErrCode_Name(ErrCode value) {
    return MsgRet_ErrCode_Name(value);
  }
  static inline bool ErrCode_Parse(const ::std::string& name,
      ErrCode* value) {
    return MsgRet_ErrCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MsgRet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_zonesvr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgCmd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MsgCmd) */ {
 public:
  MsgCmd();
  virtual ~MsgCmd();

  MsgCmd(const MsgCmd& from);

  inline MsgCmd& operator=(const MsgCmd& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCmd& default_instance();

  static inline const MsgCmd* internal_default_instance() {
    return reinterpret_cast<const MsgCmd*>(
               &_MsgCmd_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(MsgCmd* other);

  // implements Message ----------------------------------------------

  inline MsgCmd* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgCmd* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgCmd& from);
  void MergeFrom(const MsgCmd& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgCmd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MsgCmd_MsgId MsgId;
  static const MsgId MSGINIT =
    MsgCmd_MsgId_MSGINIT;
  static const MsgId LOGINREQ =
    MsgCmd_MsgId_LOGINREQ;
  static const MsgId LOGINRSP =
    MsgCmd_MsgId_LOGINRSP;
  static const MsgId ZONESYN =
    MsgCmd_MsgId_ZONESYN;
  static const MsgId ZONESTAT =
    MsgCmd_MsgId_ZONESTAT;
  static const MsgId CHATREQ =
    MsgCmd_MsgId_CHATREQ;
  static const MsgId CHATRSP =
    MsgCmd_MsgId_CHATRSP;
  static const MsgId CHATSTAT =
    MsgCmd_MsgId_CHATSTAT;
  static inline bool MsgId_IsValid(int value) {
    return MsgCmd_MsgId_IsValid(value);
  }
  static const MsgId MsgId_MIN =
    MsgCmd_MsgId_MsgId_MIN;
  static const MsgId MsgId_MAX =
    MsgCmd_MsgId_MsgId_MAX;
  static const int MsgId_ARRAYSIZE =
    MsgCmd_MsgId_MsgId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgId_descriptor() {
    return MsgCmd_MsgId_descriptor();
  }
  static inline const ::std::string& MsgId_Name(MsgId value) {
    return MsgCmd_MsgId_Name(value);
  }
  static inline bool MsgId_Parse(const ::std::string& name,
      MsgId* value) {
    return MsgCmd_MsgId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MsgCmd)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_zonesvr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LoginReq) */ {
 public:
  LoginReq();
  virtual ~LoginReq();

  LoginReq(const LoginReq& from);

  inline LoginReq& operator=(const LoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginReq& default_instance();

  static inline const LoginReq* internal_default_instance() {
    return reinterpret_cast<const LoginReq*>(
               &_LoginReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(LoginReq* other);

  // implements Message ----------------------------------------------

  inline LoginReq* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginReq& from);
  void MergeFrom(const LoginReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:LoginReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct protobuf_zonesvr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LoginRsp) */ {
 public:
  LoginRsp();
  virtual ~LoginRsp();

  LoginRsp(const LoginRsp& from);

  inline LoginRsp& operator=(const LoginRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRsp& default_instance();

  static inline const LoginRsp* internal_default_instance() {
    return reinterpret_cast<const LoginRsp*>(
               &_LoginRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(LoginRsp* other);

  // implements Message ----------------------------------------------

  inline LoginRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginRsp& from);
  void MergeFrom(const LoginRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LoginRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 ret_;
  mutable int _cached_size_;
  friend struct protobuf_zonesvr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Persion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Persion) */ {
 public:
  Persion();
  virtual ~Persion();

  Persion(const Persion& from);

  inline Persion& operator=(const Persion& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Persion& default_instance();

  static inline const Persion* internal_default_instance() {
    return reinterpret_cast<const Persion*>(
               &_Persion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(Persion* other);

  // implements Message ----------------------------------------------

  inline Persion* New() const PROTOBUF_FINAL { return New(NULL); }

  Persion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Persion& from);
  void MergeFrom(const Persion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Persion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:Persion)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct protobuf_zonesvr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ZonePoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ZonePoint) */ {
 public:
  ZonePoint();
  virtual ~ZonePoint();

  ZonePoint(const ZonePoint& from);

  inline ZonePoint& operator=(const ZonePoint& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ZonePoint& default_instance();

  static inline const ZonePoint* internal_default_instance() {
    return reinterpret_cast<const ZonePoint*>(
               &_ZonePoint_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ZonePoint* other);

  // implements Message ----------------------------------------------

  inline ZonePoint* New() const PROTOBUF_FINAL { return New(NULL); }

  ZonePoint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ZonePoint& from);
  void MergeFrom(const ZonePoint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ZonePoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // int32 y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ZonePoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  mutable int _cached_size_;
  friend struct protobuf_zonesvr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ZoneSyn_Point : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ZoneSyn.Point) */ {
 public:
  ZoneSyn_Point();
  virtual ~ZoneSyn_Point();

  ZoneSyn_Point(const ZoneSyn_Point& from);

  inline ZoneSyn_Point& operator=(const ZoneSyn_Point& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ZoneSyn_Point& default_instance();

  static inline const ZoneSyn_Point* internal_default_instance() {
    return reinterpret_cast<const ZoneSyn_Point*>(
               &_ZoneSyn_Point_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ZoneSyn_Point* other);

  // implements Message ----------------------------------------------

  inline ZoneSyn_Point* New() const PROTOBUF_FINAL { return New(NULL); }

  ZoneSyn_Point* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ZoneSyn_Point& from);
  void MergeFrom(const ZoneSyn_Point& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ZoneSyn_Point* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // int32 y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ZoneSyn.Point)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  mutable int _cached_size_;
  friend struct protobuf_zonesvr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ZoneSyn : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ZoneSyn) */ {
 public:
  ZoneSyn();
  virtual ~ZoneSyn();

  ZoneSyn(const ZoneSyn& from);

  inline ZoneSyn& operator=(const ZoneSyn& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ZoneSyn& default_instance();

  static inline const ZoneSyn* internal_default_instance() {
    return reinterpret_cast<const ZoneSyn*>(
               &_ZoneSyn_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(ZoneSyn* other);

  // implements Message ----------------------------------------------

  inline ZoneSyn* New() const PROTOBUF_FINAL { return New(NULL); }

  ZoneSyn* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ZoneSyn& from);
  void MergeFrom(const ZoneSyn& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ZoneSyn* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ZoneSyn_Point Point;

  // accessors -------------------------------------------------------

  // .Persion persion = 1;
  bool has_persion() const;
  void clear_persion();
  static const int kPersionFieldNumber = 1;
  const ::Persion& persion() const;
  ::Persion* mutable_persion();
  ::Persion* release_persion();
  void set_allocated_persion(::Persion* persion);

  // .ZoneSyn.Point point = 2;
  bool has_point() const;
  void clear_point();
  static const int kPointFieldNumber = 2;
  const ::ZoneSyn_Point& point() const;
  ::ZoneSyn_Point* mutable_point();
  ::ZoneSyn_Point* release_point();
  void set_allocated_point(::ZoneSyn_Point* point);

  // @@protoc_insertion_point(class_scope:ZoneSyn)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Persion* persion_;
  ::ZoneSyn_Point* point_;
  mutable int _cached_size_;
  friend struct protobuf_zonesvr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ZoneStat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ZoneStat) */ {
 public:
  ZoneStat();
  virtual ~ZoneStat();

  ZoneStat(const ZoneStat& from);

  inline ZoneStat& operator=(const ZoneStat& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ZoneStat& default_instance();

  static inline const ZoneStat* internal_default_instance() {
    return reinterpret_cast<const ZoneStat*>(
               &_ZoneStat_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(ZoneStat* other);

  // implements Message ----------------------------------------------

  inline ZoneStat* New() const PROTOBUF_FINAL { return New(NULL); }

  ZoneStat* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ZoneStat& from);
  void MergeFrom(const ZoneStat& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ZoneStat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ZoneSyn syn_list = 1;
  int syn_list_size() const;
  void clear_syn_list();
  static const int kSynListFieldNumber = 1;
  const ::ZoneSyn& syn_list(int index) const;
  ::ZoneSyn* mutable_syn_list(int index);
  ::ZoneSyn* add_syn_list();
  ::google::protobuf::RepeatedPtrField< ::ZoneSyn >*
      mutable_syn_list();
  const ::google::protobuf::RepeatedPtrField< ::ZoneSyn >&
      syn_list() const;

  // @@protoc_insertion_point(class_scope:ZoneStat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ZoneSyn > syn_list_;
  mutable int _cached_size_;
  friend struct protobuf_zonesvr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChatReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ChatReq) */ {
 public:
  ChatReq();
  virtual ~ChatReq();

  ChatReq(const ChatReq& from);

  inline ChatReq& operator=(const ChatReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatReq& default_instance();

  static inline const ChatReq* internal_default_instance() {
    return reinterpret_cast<const ChatReq*>(
               &_ChatReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(ChatReq* other);

  // implements Message ----------------------------------------------

  inline ChatReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatReq& from);
  void MergeFrom(const ChatReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // bytes content = 2;
  void clear_content();
  static const int kContentFieldNumber = 2;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:ChatReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  mutable int _cached_size_;
  friend struct protobuf_zonesvr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChatRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ChatRsp) */ {
 public:
  ChatRsp();
  virtual ~ChatRsp();

  ChatRsp(const ChatRsp& from);

  inline ChatRsp& operator=(const ChatRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatRsp& default_instance();

  static inline const ChatRsp* internal_default_instance() {
    return reinterpret_cast<const ChatRsp*>(
               &_ChatRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(ChatRsp* other);

  // implements Message ----------------------------------------------

  inline ChatRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatRsp& from);
  void MergeFrom(const ChatRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ChatRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 ret_;
  mutable int _cached_size_;
  friend struct protobuf_zonesvr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChatStat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ChatStat) */ {
 public:
  ChatStat();
  virtual ~ChatStat();

  ChatStat(const ChatStat& from);

  inline ChatStat& operator=(const ChatStat& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatStat& default_instance();

  static inline const ChatStat* internal_default_instance() {
    return reinterpret_cast<const ChatStat*>(
               &_ChatStat_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(ChatStat* other);

  // implements Message ----------------------------------------------

  inline ChatStat* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatStat* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatStat& from);
  void MergeFrom(const ChatStat& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatStat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes content = 2;
  void clear_content();
  static const int kContentFieldNumber = 2;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // .Persion speaker = 1;
  bool has_speaker() const;
  void clear_speaker();
  static const int kSpeakerFieldNumber = 1;
  const ::Persion& speaker() const;
  ::Persion* mutable_speaker();
  ::Persion* release_speaker();
  void set_allocated_speaker(::Persion* speaker);

  // @@protoc_insertion_point(class_scope:ChatStat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::Persion* speaker_;
  mutable int _cached_size_;
  friend struct protobuf_zonesvr_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgRet

// -------------------------------------------------------------------

// MsgCmd

// -------------------------------------------------------------------

// LoginReq

// bytes name = 1;
inline void LoginReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginReq::name() const {
  // @@protoc_insertion_point(field_get:LoginReq.name)
  return name_.GetNoArena();
}
inline void LoginReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginReq.name)
}
#if LANG_CXX11
inline void LoginReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginReq.name)
}
#endif
inline void LoginReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginReq.name)
}
inline void LoginReq::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginReq.name)
}
inline ::std::string* LoginReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:LoginReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_name() {
  // @@protoc_insertion_point(field_release:LoginReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:LoginReq.name)
}

// -------------------------------------------------------------------

// LoginRsp

// int32 ret = 1;
inline void LoginRsp::clear_ret() {
  ret_ = 0;
}
inline ::google::protobuf::int32 LoginRsp::ret() const {
  // @@protoc_insertion_point(field_get:LoginRsp.ret)
  return ret_;
}
inline void LoginRsp::set_ret(::google::protobuf::int32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:LoginRsp.ret)
}

// -------------------------------------------------------------------

// Persion

// bytes name = 1;
inline void Persion::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Persion::name() const {
  // @@protoc_insertion_point(field_get:Persion.name)
  return name_.GetNoArena();
}
inline void Persion::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Persion.name)
}
#if LANG_CXX11
inline void Persion::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Persion.name)
}
#endif
inline void Persion::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Persion.name)
}
inline void Persion::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Persion.name)
}
inline ::std::string* Persion::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Persion.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Persion::release_name() {
  // @@protoc_insertion_point(field_release:Persion.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Persion::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Persion.name)
}

// -------------------------------------------------------------------

// ZonePoint

// int32 x = 1;
inline void ZonePoint::clear_x() {
  x_ = 0;
}
inline ::google::protobuf::int32 ZonePoint::x() const {
  // @@protoc_insertion_point(field_get:ZonePoint.x)
  return x_;
}
inline void ZonePoint::set_x(::google::protobuf::int32 value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:ZonePoint.x)
}

// int32 y = 2;
inline void ZonePoint::clear_y() {
  y_ = 0;
}
inline ::google::protobuf::int32 ZonePoint::y() const {
  // @@protoc_insertion_point(field_get:ZonePoint.y)
  return y_;
}
inline void ZonePoint::set_y(::google::protobuf::int32 value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:ZonePoint.y)
}

// -------------------------------------------------------------------

// ZoneSyn_Point

// int32 x = 1;
inline void ZoneSyn_Point::clear_x() {
  x_ = 0;
}
inline ::google::protobuf::int32 ZoneSyn_Point::x() const {
  // @@protoc_insertion_point(field_get:ZoneSyn.Point.x)
  return x_;
}
inline void ZoneSyn_Point::set_x(::google::protobuf::int32 value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:ZoneSyn.Point.x)
}

// int32 y = 2;
inline void ZoneSyn_Point::clear_y() {
  y_ = 0;
}
inline ::google::protobuf::int32 ZoneSyn_Point::y() const {
  // @@protoc_insertion_point(field_get:ZoneSyn.Point.y)
  return y_;
}
inline void ZoneSyn_Point::set_y(::google::protobuf::int32 value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:ZoneSyn.Point.y)
}

// -------------------------------------------------------------------

// ZoneSyn

// .Persion persion = 1;
inline bool ZoneSyn::has_persion() const {
  return this != internal_default_instance() && persion_ != NULL;
}
inline void ZoneSyn::clear_persion() {
  if (GetArenaNoVirtual() == NULL && persion_ != NULL) delete persion_;
  persion_ = NULL;
}
inline const ::Persion& ZoneSyn::persion() const {
  // @@protoc_insertion_point(field_get:ZoneSyn.persion)
  return persion_ != NULL ? *persion_
                         : *::Persion::internal_default_instance();
}
inline ::Persion* ZoneSyn::mutable_persion() {
  
  if (persion_ == NULL) {
    persion_ = new ::Persion;
  }
  // @@protoc_insertion_point(field_mutable:ZoneSyn.persion)
  return persion_;
}
inline ::Persion* ZoneSyn::release_persion() {
  // @@protoc_insertion_point(field_release:ZoneSyn.persion)
  
  ::Persion* temp = persion_;
  persion_ = NULL;
  return temp;
}
inline void ZoneSyn::set_allocated_persion(::Persion* persion) {
  delete persion_;
  persion_ = persion;
  if (persion) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ZoneSyn.persion)
}

// .ZoneSyn.Point point = 2;
inline bool ZoneSyn::has_point() const {
  return this != internal_default_instance() && point_ != NULL;
}
inline void ZoneSyn::clear_point() {
  if (GetArenaNoVirtual() == NULL && point_ != NULL) delete point_;
  point_ = NULL;
}
inline const ::ZoneSyn_Point& ZoneSyn::point() const {
  // @@protoc_insertion_point(field_get:ZoneSyn.point)
  return point_ != NULL ? *point_
                         : *::ZoneSyn_Point::internal_default_instance();
}
inline ::ZoneSyn_Point* ZoneSyn::mutable_point() {
  
  if (point_ == NULL) {
    point_ = new ::ZoneSyn_Point;
  }
  // @@protoc_insertion_point(field_mutable:ZoneSyn.point)
  return point_;
}
inline ::ZoneSyn_Point* ZoneSyn::release_point() {
  // @@protoc_insertion_point(field_release:ZoneSyn.point)
  
  ::ZoneSyn_Point* temp = point_;
  point_ = NULL;
  return temp;
}
inline void ZoneSyn::set_allocated_point(::ZoneSyn_Point* point) {
  delete point_;
  point_ = point;
  if (point) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ZoneSyn.point)
}

// -------------------------------------------------------------------

// ZoneStat

// repeated .ZoneSyn syn_list = 1;
inline int ZoneStat::syn_list_size() const {
  return syn_list_.size();
}
inline void ZoneStat::clear_syn_list() {
  syn_list_.Clear();
}
inline const ::ZoneSyn& ZoneStat::syn_list(int index) const {
  // @@protoc_insertion_point(field_get:ZoneStat.syn_list)
  return syn_list_.Get(index);
}
inline ::ZoneSyn* ZoneStat::mutable_syn_list(int index) {
  // @@protoc_insertion_point(field_mutable:ZoneStat.syn_list)
  return syn_list_.Mutable(index);
}
inline ::ZoneSyn* ZoneStat::add_syn_list() {
  // @@protoc_insertion_point(field_add:ZoneStat.syn_list)
  return syn_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ZoneSyn >*
ZoneStat::mutable_syn_list() {
  // @@protoc_insertion_point(field_mutable_list:ZoneStat.syn_list)
  return &syn_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ZoneSyn >&
ZoneStat::syn_list() const {
  // @@protoc_insertion_point(field_list:ZoneStat.syn_list)
  return syn_list_;
}

// -------------------------------------------------------------------

// ChatReq

// bytes name = 1;
inline void ChatReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChatReq::name() const {
  // @@protoc_insertion_point(field_get:ChatReq.name)
  return name_.GetNoArena();
}
inline void ChatReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChatReq.name)
}
#if LANG_CXX11
inline void ChatReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ChatReq.name)
}
#endif
inline void ChatReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChatReq.name)
}
inline void ChatReq::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChatReq.name)
}
inline ::std::string* ChatReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ChatReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatReq::release_name() {
  // @@protoc_insertion_point(field_release:ChatReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ChatReq.name)
}

// bytes content = 2;
inline void ChatReq::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChatReq::content() const {
  // @@protoc_insertion_point(field_get:ChatReq.content)
  return content_.GetNoArena();
}
inline void ChatReq::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChatReq.content)
}
#if LANG_CXX11
inline void ChatReq::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ChatReq.content)
}
#endif
inline void ChatReq::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChatReq.content)
}
inline void ChatReq::set_content(const void* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChatReq.content)
}
inline ::std::string* ChatReq::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:ChatReq.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatReq::release_content() {
  // @@protoc_insertion_point(field_release:ChatReq.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatReq::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:ChatReq.content)
}

// -------------------------------------------------------------------

// ChatRsp

// int32 ret = 1;
inline void ChatRsp::clear_ret() {
  ret_ = 0;
}
inline ::google::protobuf::int32 ChatRsp::ret() const {
  // @@protoc_insertion_point(field_get:ChatRsp.ret)
  return ret_;
}
inline void ChatRsp::set_ret(::google::protobuf::int32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:ChatRsp.ret)
}

// -------------------------------------------------------------------

// ChatStat

// .Persion speaker = 1;
inline bool ChatStat::has_speaker() const {
  return this != internal_default_instance() && speaker_ != NULL;
}
inline void ChatStat::clear_speaker() {
  if (GetArenaNoVirtual() == NULL && speaker_ != NULL) delete speaker_;
  speaker_ = NULL;
}
inline const ::Persion& ChatStat::speaker() const {
  // @@protoc_insertion_point(field_get:ChatStat.speaker)
  return speaker_ != NULL ? *speaker_
                         : *::Persion::internal_default_instance();
}
inline ::Persion* ChatStat::mutable_speaker() {
  
  if (speaker_ == NULL) {
    speaker_ = new ::Persion;
  }
  // @@protoc_insertion_point(field_mutable:ChatStat.speaker)
  return speaker_;
}
inline ::Persion* ChatStat::release_speaker() {
  // @@protoc_insertion_point(field_release:ChatStat.speaker)
  
  ::Persion* temp = speaker_;
  speaker_ = NULL;
  return temp;
}
inline void ChatStat::set_allocated_speaker(::Persion* speaker) {
  delete speaker_;
  speaker_ = speaker;
  if (speaker) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ChatStat.speaker)
}

// bytes content = 2;
inline void ChatStat::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChatStat::content() const {
  // @@protoc_insertion_point(field_get:ChatStat.content)
  return content_.GetNoArena();
}
inline void ChatStat::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChatStat.content)
}
#if LANG_CXX11
inline void ChatStat::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ChatStat.content)
}
#endif
inline void ChatStat::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChatStat.content)
}
inline void ChatStat::set_content(const void* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChatStat.content)
}
inline ::std::string* ChatStat::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:ChatStat.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatStat::release_content() {
  // @@protoc_insertion_point(field_release:ChatStat.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatStat::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:ChatStat.content)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::MsgRet_ErrCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgRet_ErrCode>() {
  return ::MsgRet_ErrCode_descriptor();
}
template <> struct is_proto_enum< ::MsgCmd_MsgId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgCmd_MsgId>() {
  return ::MsgCmd_MsgId_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_zonesvr_2eproto__INCLUDED
