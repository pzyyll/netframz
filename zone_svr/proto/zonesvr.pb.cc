// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zonesvr.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "zonesvr.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class MsgRetDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgRet> {
} _MsgRet_default_instance_;
class MsgCmdDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgCmd> {
} _MsgCmd_default_instance_;
class Persion_PointDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Persion_Point> {
} _Persion_Point_default_instance_;
class PersionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Persion> {
} _Persion_default_instance_;
class LoginReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoginReq> {
} _LoginReq_default_instance_;
class LoginRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoginRsp> {
} _LoginRsp_default_instance_;
class ZoneSynDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ZoneSyn> {
} _ZoneSyn_default_instance_;
class ZoneStatDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ZoneStat> {
} _ZoneStat_default_instance_;
class ChatReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ChatReq> {
} _ChatReq_default_instance_;
class ChatRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ChatRsp> {
} _ChatRsp_default_instance_;
class ChatStatDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ChatStat> {
} _ChatStat_default_instance_;

namespace protobuf_zonesvr_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[11];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Persion_Point, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Persion_Point, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Persion_Point, y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Persion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Persion, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Persion, point_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRsp, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRsp, err_msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRsp, persion_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZoneSyn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZoneSyn, persion_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZoneStat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZoneStat, persion_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatReq, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatReq, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRsp, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRsp, err_msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatStat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatStat, speaker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatStat, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatStat, time_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(MsgRet)},
  { 5, -1, sizeof(MsgCmd)},
  { 10, -1, sizeof(Persion_Point)},
  { 17, -1, sizeof(Persion)},
  { 24, -1, sizeof(LoginReq)},
  { 30, -1, sizeof(LoginRsp)},
  { 38, -1, sizeof(ZoneSyn)},
  { 44, -1, sizeof(ZoneStat)},
  { 50, -1, sizeof(ChatReq)},
  { 57, -1, sizeof(ChatRsp)},
  { 64, -1, sizeof(ChatStat)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgRet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Persion_Point_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Persion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LoginRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ZoneSyn_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ZoneStat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChatReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChatRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChatStat_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "zonesvr.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

}  // namespace

void TableStruct::Shutdown() {
  _MsgRet_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _MsgCmd_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _Persion_Point_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _Persion_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _LoginReq_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _LoginRsp_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _ZoneSyn_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _ZoneStat_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _ChatReq_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _ChatRsp_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _ChatStat_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _MsgRet_default_instance_.DefaultConstruct();
  _MsgCmd_default_instance_.DefaultConstruct();
  _Persion_Point_default_instance_.DefaultConstruct();
  _Persion_default_instance_.DefaultConstruct();
  _LoginReq_default_instance_.DefaultConstruct();
  _LoginRsp_default_instance_.DefaultConstruct();
  _ZoneSyn_default_instance_.DefaultConstruct();
  _ZoneStat_default_instance_.DefaultConstruct();
  _ChatReq_default_instance_.DefaultConstruct();
  _ChatRsp_default_instance_.DefaultConstruct();
  _ChatStat_default_instance_.DefaultConstruct();
  _Persion_default_instance_.get_mutable()->point_ = const_cast< ::Persion_Point*>(
      ::Persion_Point::internal_default_instance());
  _ZoneSyn_default_instance_.get_mutable()->persion_ = const_cast< ::Persion*>(
      ::Persion::internal_default_instance());
  _ChatStat_default_instance_.get_mutable()->speaker_ = const_cast< ::Persion*>(
      ::Persion::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rzonesvr.proto\"3\n\006MsgRet\")\n\007ErrCode\022\013\n\007"
      "SUCCESS\020\000\022\021\n\004FAIL\020\377\377\377\377\377\377\377\377\377\001\"\204\001\n\006MsgCmd\""
      "z\n\005MsgId\022\013\n\007MSGINIT\020\000\022\r\n\010LOGINREQ\020\201 \022\r\n\010"
      "LOGINRSP\020\202 \022\014\n\007ZONESYN\020\201@\022\r\n\010ZONESTAT\020\202@"
      "\022\014\n\007CHATREQ\020\201`\022\014\n\007CHATRSP\020\202`\022\r\n\010CHATSTAT"
      "\020\203`\"U\n\007Persion\022\014\n\004name\030\001 \001(\014\022\035\n\005point\030\002 "
      "\001(\0132\016.Persion.Point\032\035\n\005Point\022\t\n\001x\030\001 \001(\005\022"
      "\t\n\001y\030\002 \001(\005\"\030\n\010LoginReq\022\014\n\004name\030\001 \001(\014\"H\n\010"
      "LoginRsp\022\013\n\003ret\030\001 \001(\005\022\017\n\007err_msg\030\002 \001(\014\022\036"
      "\n\014persion_list\030\003 \003(\0132\010.Persion\"$\n\007ZoneSy"
      "n\022\031\n\007persion\030\001 \001(\0132\010.Persion\"*\n\010ZoneStat"
      "\022\036\n\014persion_list\030\001 \003(\0132\010.Persion\"(\n\007Chat"
      "Req\022\014\n\004name\030\001 \001(\014\022\017\n\007content\030\002 \001(\014\"\'\n\007Ch"
      "atRsp\022\013\n\003ret\030\001 \001(\005\022\017\n\007err_msg\030\002 \001(\014\"D\n\010C"
      "hatStat\022\031\n\007speaker\030\001 \001(\0132\010.Persion\022\017\n\007co"
      "ntent\030\002 \001(\014\022\014\n\004time\030\003 \001(\rb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 633);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "zonesvr.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_zonesvr_2eproto

const ::google::protobuf::EnumDescriptor* MsgRet_ErrCode_descriptor() {
  protobuf_zonesvr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zonesvr_2eproto::file_level_enum_descriptors[0];
}
bool MsgRet_ErrCode_IsValid(int value) {
  switch (value) {
    case -1:
    case 0:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MsgRet_ErrCode MsgRet::SUCCESS;
const MsgRet_ErrCode MsgRet::FAIL;
const MsgRet_ErrCode MsgRet::ErrCode_MIN;
const MsgRet_ErrCode MsgRet::ErrCode_MAX;
const int MsgRet::ErrCode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MsgCmd_MsgId_descriptor() {
  protobuf_zonesvr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zonesvr_2eproto::file_level_enum_descriptors[1];
}
bool MsgCmd_MsgId_IsValid(int value) {
  switch (value) {
    case 0:
    case 4097:
    case 4098:
    case 8193:
    case 8194:
    case 12289:
    case 12290:
    case 12291:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MsgCmd_MsgId MsgCmd::MSGINIT;
const MsgCmd_MsgId MsgCmd::LOGINREQ;
const MsgCmd_MsgId MsgCmd::LOGINRSP;
const MsgCmd_MsgId MsgCmd::ZONESYN;
const MsgCmd_MsgId MsgCmd::ZONESTAT;
const MsgCmd_MsgId MsgCmd::CHATREQ;
const MsgCmd_MsgId MsgCmd::CHATRSP;
const MsgCmd_MsgId MsgCmd::CHATSTAT;
const MsgCmd_MsgId MsgCmd::MsgId_MIN;
const MsgCmd_MsgId MsgCmd::MsgId_MAX;
const int MsgCmd::MsgId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgRet::MsgRet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zonesvr_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgRet)
}
MsgRet::MsgRet(const MsgRet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MsgRet)
}

void MsgRet::SharedCtor() {
  _cached_size_ = 0;
}

MsgRet::~MsgRet() {
  // @@protoc_insertion_point(destructor:MsgRet)
  SharedDtor();
}

void MsgRet::SharedDtor() {
}

void MsgRet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgRet::descriptor() {
  protobuf_zonesvr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zonesvr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgRet& MsgRet::default_instance() {
  protobuf_zonesvr_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgRet* MsgRet::New(::google::protobuf::Arena* arena) const {
  MsgRet* n = new MsgRet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgRet::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgRet)
}

bool MsgRet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgRet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:MsgRet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgRet)
  return false;
#undef DO_
}

void MsgRet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_end:MsgRet)
}

::google::protobuf::uint8* MsgRet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MsgRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_to_array_end:MsgRet)
  return target;
}

size_t MsgRet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MsgRet)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgRet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgRet)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgRet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgRet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgRet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgRet)
    MergeFrom(*source);
  }
}

void MsgRet::MergeFrom(const MsgRet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgRet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MsgRet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgRet::CopyFrom(const MsgRet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRet::IsInitialized() const {
  return true;
}

void MsgRet::Swap(MsgRet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgRet::InternalSwap(MsgRet* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgRet::GetMetadata() const {
  protobuf_zonesvr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zonesvr_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgRet

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgCmd::MsgCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zonesvr_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgCmd)
}
MsgCmd::MsgCmd(const MsgCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MsgCmd)
}

void MsgCmd::SharedCtor() {
  _cached_size_ = 0;
}

MsgCmd::~MsgCmd() {
  // @@protoc_insertion_point(destructor:MsgCmd)
  SharedDtor();
}

void MsgCmd::SharedDtor() {
}

void MsgCmd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgCmd::descriptor() {
  protobuf_zonesvr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zonesvr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgCmd& MsgCmd::default_instance() {
  protobuf_zonesvr_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgCmd* MsgCmd::New(::google::protobuf::Arena* arena) const {
  MsgCmd* n = new MsgCmd;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgCmd)
}

bool MsgCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgCmd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:MsgCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgCmd)
  return false;
#undef DO_
}

void MsgCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_end:MsgCmd)
}

::google::protobuf::uint8* MsgCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MsgCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_to_array_end:MsgCmd)
  return target;
}

size_t MsgCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MsgCmd)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgCmd)
    MergeFrom(*source);
  }
}

void MsgCmd::MergeFrom(const MsgCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MsgCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgCmd::CopyFrom(const MsgCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgCmd::IsInitialized() const {
  return true;
}

void MsgCmd::Swap(MsgCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgCmd::InternalSwap(MsgCmd* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgCmd::GetMetadata() const {
  protobuf_zonesvr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zonesvr_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgCmd

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Persion_Point::kXFieldNumber;
const int Persion_Point::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Persion_Point::Persion_Point()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zonesvr_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Persion.Point)
}
Persion_Point::Persion_Point(const Persion_Point& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:Persion.Point)
}

void Persion_Point::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _cached_size_ = 0;
}

Persion_Point::~Persion_Point() {
  // @@protoc_insertion_point(destructor:Persion.Point)
  SharedDtor();
}

void Persion_Point::SharedDtor() {
}

void Persion_Point::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Persion_Point::descriptor() {
  protobuf_zonesvr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zonesvr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Persion_Point& Persion_Point::default_instance() {
  protobuf_zonesvr_2eproto::InitDefaults();
  return *internal_default_instance();
}

Persion_Point* Persion_Point::New(::google::protobuf::Arena* arena) const {
  Persion_Point* n = new Persion_Point;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Persion_Point::Clear() {
// @@protoc_insertion_point(message_clear_start:Persion.Point)
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

bool Persion_Point::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Persion.Point)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Persion.Point)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Persion.Point)
  return false;
#undef DO_
}

void Persion_Point::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Persion.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // int32 y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  // @@protoc_insertion_point(serialize_end:Persion.Point)
}

::google::protobuf::uint8* Persion_Point::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Persion.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // int32 y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Persion.Point)
  return target;
}

size_t Persion_Point::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Persion.Point)
  size_t total_size = 0;

  // int32 x = 1;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  // int32 y = 2;
  if (this->y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Persion_Point::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Persion.Point)
  GOOGLE_DCHECK_NE(&from, this);
  const Persion_Point* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Persion_Point>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Persion.Point)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Persion.Point)
    MergeFrom(*source);
  }
}

void Persion_Point::MergeFrom(const Persion_Point& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Persion.Point)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void Persion_Point::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Persion.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Persion_Point::CopyFrom(const Persion_Point& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Persion.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Persion_Point::IsInitialized() const {
  return true;
}

void Persion_Point::Swap(Persion_Point* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Persion_Point::InternalSwap(Persion_Point* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Persion_Point::GetMetadata() const {
  protobuf_zonesvr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zonesvr_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Persion_Point

// int32 x = 1;
void Persion_Point::clear_x() {
  x_ = 0;
}
::google::protobuf::int32 Persion_Point::x() const {
  // @@protoc_insertion_point(field_get:Persion.Point.x)
  return x_;
}
void Persion_Point::set_x(::google::protobuf::int32 value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:Persion.Point.x)
}

// int32 y = 2;
void Persion_Point::clear_y() {
  y_ = 0;
}
::google::protobuf::int32 Persion_Point::y() const {
  // @@protoc_insertion_point(field_get:Persion.Point.y)
  return y_;
}
void Persion_Point::set_y(::google::protobuf::int32 value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:Persion.Point.y)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Persion::kNameFieldNumber;
const int Persion::kPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Persion::Persion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zonesvr_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Persion)
}
Persion::Persion(const Persion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_point()) {
    point_ = new ::Persion_Point(*from.point_);
  } else {
    point_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Persion)
}

void Persion::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  point_ = NULL;
  _cached_size_ = 0;
}

Persion::~Persion() {
  // @@protoc_insertion_point(destructor:Persion)
  SharedDtor();
}

void Persion::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete point_;
  }
}

void Persion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Persion::descriptor() {
  protobuf_zonesvr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zonesvr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Persion& Persion::default_instance() {
  protobuf_zonesvr_2eproto::InitDefaults();
  return *internal_default_instance();
}

Persion* Persion::New(::google::protobuf::Arena* arena) const {
  Persion* n = new Persion;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Persion::Clear() {
// @@protoc_insertion_point(message_clear_start:Persion)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && point_ != NULL) {
    delete point_;
  }
  point_ = NULL;
}

bool Persion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Persion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Persion.Point point = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Persion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Persion)
  return false;
#undef DO_
}

void Persion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Persion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->name(), output);
  }

  // .Persion.Point point = 2;
  if (this->has_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->point_, output);
  }

  // @@protoc_insertion_point(serialize_end:Persion)
}

::google::protobuf::uint8* Persion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Persion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  // .Persion.Point point = 2;
  if (this->has_point()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->point_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Persion)
  return target;
}

size_t Persion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Persion)
  size_t total_size = 0;

  // bytes name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // .Persion.Point point = 2;
  if (this->has_point()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->point_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Persion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Persion)
  GOOGLE_DCHECK_NE(&from, this);
  const Persion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Persion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Persion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Persion)
    MergeFrom(*source);
  }
}

void Persion::MergeFrom(const Persion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Persion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_point()) {
    mutable_point()->::Persion_Point::MergeFrom(from.point());
  }
}

void Persion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Persion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Persion::CopyFrom(const Persion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Persion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Persion::IsInitialized() const {
  return true;
}

void Persion::Swap(Persion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Persion::InternalSwap(Persion* other) {
  name_.Swap(&other->name_);
  std::swap(point_, other->point_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Persion::GetMetadata() const {
  protobuf_zonesvr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zonesvr_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Persion

// bytes name = 1;
void Persion::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Persion::name() const {
  // @@protoc_insertion_point(field_get:Persion.name)
  return name_.GetNoArena();
}
void Persion::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Persion.name)
}
#if LANG_CXX11
void Persion::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Persion.name)
}
#endif
void Persion::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Persion.name)
}
void Persion::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Persion.name)
}
::std::string* Persion::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Persion.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Persion::release_name() {
  // @@protoc_insertion_point(field_release:Persion.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Persion::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Persion.name)
}

// .Persion.Point point = 2;
bool Persion::has_point() const {
  return this != internal_default_instance() && point_ != NULL;
}
void Persion::clear_point() {
  if (GetArenaNoVirtual() == NULL && point_ != NULL) delete point_;
  point_ = NULL;
}
const ::Persion_Point& Persion::point() const {
  // @@protoc_insertion_point(field_get:Persion.point)
  return point_ != NULL ? *point_
                         : *::Persion_Point::internal_default_instance();
}
::Persion_Point* Persion::mutable_point() {
  
  if (point_ == NULL) {
    point_ = new ::Persion_Point;
  }
  // @@protoc_insertion_point(field_mutable:Persion.point)
  return point_;
}
::Persion_Point* Persion::release_point() {
  // @@protoc_insertion_point(field_release:Persion.point)
  
  ::Persion_Point* temp = point_;
  point_ = NULL;
  return temp;
}
void Persion::set_allocated_point(::Persion_Point* point) {
  delete point_;
  point_ = point;
  if (point) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Persion.point)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginReq::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginReq::LoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zonesvr_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LoginReq)
}
LoginReq::LoginReq(const LoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:LoginReq)
}

void LoginReq::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LoginReq::~LoginReq() {
  // @@protoc_insertion_point(destructor:LoginReq)
  SharedDtor();
}

void LoginReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginReq::descriptor() {
  protobuf_zonesvr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zonesvr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginReq& LoginReq::default_instance() {
  protobuf_zonesvr_2eproto::InitDefaults();
  return *internal_default_instance();
}

LoginReq* LoginReq::New(::google::protobuf::Arena* arena) const {
  LoginReq* n = new LoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginReq)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool LoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LoginReq)
  return false;
#undef DO_
}

void LoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:LoginReq)
}

::google::protobuf::uint8* LoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:LoginReq)
  return target;
}

size_t LoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginReq)
  size_t total_size = 0;

  // bytes name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LoginReq)
    MergeFrom(*source);
  }
}

void LoginReq::MergeFrom(const LoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void LoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginReq::CopyFrom(const LoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginReq::IsInitialized() const {
  return true;
}

void LoginReq::Swap(LoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginReq::InternalSwap(LoginReq* other) {
  name_.Swap(&other->name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginReq::GetMetadata() const {
  protobuf_zonesvr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zonesvr_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginReq

// bytes name = 1;
void LoginReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginReq::name() const {
  // @@protoc_insertion_point(field_get:LoginReq.name)
  return name_.GetNoArena();
}
void LoginReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginReq.name)
}
#if LANG_CXX11
void LoginReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginReq.name)
}
#endif
void LoginReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginReq.name)
}
void LoginReq::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginReq.name)
}
::std::string* LoginReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:LoginReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginReq::release_name() {
  // @@protoc_insertion_point(field_release:LoginReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:LoginReq.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginRsp::kRetFieldNumber;
const int LoginRsp::kErrMsgFieldNumber;
const int LoginRsp::kPersionListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginRsp::LoginRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zonesvr_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LoginRsp)
}
LoginRsp::LoginRsp(const LoginRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      persion_list_(from.persion_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  err_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.err_msg().size() > 0) {
    err_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_msg_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:LoginRsp)
}

void LoginRsp::SharedCtor() {
  err_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

LoginRsp::~LoginRsp() {
  // @@protoc_insertion_point(destructor:LoginRsp)
  SharedDtor();
}

void LoginRsp::SharedDtor() {
  err_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginRsp::descriptor() {
  protobuf_zonesvr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zonesvr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginRsp& LoginRsp::default_instance() {
  protobuf_zonesvr_2eproto::InitDefaults();
  return *internal_default_instance();
}

LoginRsp* LoginRsp::New(::google::protobuf::Arena* arena) const {
  LoginRsp* n = new LoginRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginRsp)
  persion_list_.Clear();
  err_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
}

bool LoginRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LoginRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes err_msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_err_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Persion persion_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_persion_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LoginRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LoginRsp)
  return false;
#undef DO_
}

void LoginRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LoginRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // bytes err_msg = 2;
  if (this->err_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->err_msg(), output);
  }

  // repeated .Persion persion_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->persion_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->persion_list(static_cast<int>(i)), output);
  }

  // @@protoc_insertion_point(serialize_end:LoginRsp)
}

::google::protobuf::uint8* LoginRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LoginRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // bytes err_msg = 2;
  if (this->err_msg().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->err_msg(), target);
  }

  // repeated .Persion persion_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->persion_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->persion_list(static_cast<int>(i)), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:LoginRsp)
  return target;
}

size_t LoginRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginRsp)
  size_t total_size = 0;

  // repeated .Persion persion_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->persion_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->persion_list(static_cast<int>(i)));
    }
  }

  // bytes err_msg = 2;
  if (this->err_msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->err_msg());
  }

  // int32 ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LoginRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LoginRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LoginRsp)
    MergeFrom(*source);
  }
}

void LoginRsp::MergeFrom(const LoginRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LoginRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  persion_list_.MergeFrom(from.persion_list_);
  if (from.err_msg().size() > 0) {

    err_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_msg_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void LoginRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LoginRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRsp::CopyFrom(const LoginRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRsp::IsInitialized() const {
  return true;
}

void LoginRsp::Swap(LoginRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRsp::InternalSwap(LoginRsp* other) {
  persion_list_.InternalSwap(&other->persion_list_);
  err_msg_.Swap(&other->err_msg_);
  std::swap(ret_, other->ret_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginRsp::GetMetadata() const {
  protobuf_zonesvr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zonesvr_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginRsp

// int32 ret = 1;
void LoginRsp::clear_ret() {
  ret_ = 0;
}
::google::protobuf::int32 LoginRsp::ret() const {
  // @@protoc_insertion_point(field_get:LoginRsp.ret)
  return ret_;
}
void LoginRsp::set_ret(::google::protobuf::int32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:LoginRsp.ret)
}

// bytes err_msg = 2;
void LoginRsp::clear_err_msg() {
  err_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginRsp::err_msg() const {
  // @@protoc_insertion_point(field_get:LoginRsp.err_msg)
  return err_msg_.GetNoArena();
}
void LoginRsp::set_err_msg(const ::std::string& value) {
  
  err_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginRsp.err_msg)
}
#if LANG_CXX11
void LoginRsp::set_err_msg(::std::string&& value) {
  
  err_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginRsp.err_msg)
}
#endif
void LoginRsp::set_err_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  err_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginRsp.err_msg)
}
void LoginRsp::set_err_msg(const void* value, size_t size) {
  
  err_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginRsp.err_msg)
}
::std::string* LoginRsp::mutable_err_msg() {
  
  // @@protoc_insertion_point(field_mutable:LoginRsp.err_msg)
  return err_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginRsp::release_err_msg() {
  // @@protoc_insertion_point(field_release:LoginRsp.err_msg)
  
  return err_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRsp::set_allocated_err_msg(::std::string* err_msg) {
  if (err_msg != NULL) {
    
  } else {
    
  }
  err_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err_msg);
  // @@protoc_insertion_point(field_set_allocated:LoginRsp.err_msg)
}

// repeated .Persion persion_list = 3;
int LoginRsp::persion_list_size() const {
  return persion_list_.size();
}
void LoginRsp::clear_persion_list() {
  persion_list_.Clear();
}
const ::Persion& LoginRsp::persion_list(int index) const {
  // @@protoc_insertion_point(field_get:LoginRsp.persion_list)
  return persion_list_.Get(index);
}
::Persion* LoginRsp::mutable_persion_list(int index) {
  // @@protoc_insertion_point(field_mutable:LoginRsp.persion_list)
  return persion_list_.Mutable(index);
}
::Persion* LoginRsp::add_persion_list() {
  // @@protoc_insertion_point(field_add:LoginRsp.persion_list)
  return persion_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::Persion >*
LoginRsp::mutable_persion_list() {
  // @@protoc_insertion_point(field_mutable_list:LoginRsp.persion_list)
  return &persion_list_;
}
const ::google::protobuf::RepeatedPtrField< ::Persion >&
LoginRsp::persion_list() const {
  // @@protoc_insertion_point(field_list:LoginRsp.persion_list)
  return persion_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZoneSyn::kPersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZoneSyn::ZoneSyn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zonesvr_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ZoneSyn)
}
ZoneSyn::ZoneSyn(const ZoneSyn& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_persion()) {
    persion_ = new ::Persion(*from.persion_);
  } else {
    persion_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ZoneSyn)
}

void ZoneSyn::SharedCtor() {
  persion_ = NULL;
  _cached_size_ = 0;
}

ZoneSyn::~ZoneSyn() {
  // @@protoc_insertion_point(destructor:ZoneSyn)
  SharedDtor();
}

void ZoneSyn::SharedDtor() {
  if (this != internal_default_instance()) {
    delete persion_;
  }
}

void ZoneSyn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZoneSyn::descriptor() {
  protobuf_zonesvr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zonesvr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ZoneSyn& ZoneSyn::default_instance() {
  protobuf_zonesvr_2eproto::InitDefaults();
  return *internal_default_instance();
}

ZoneSyn* ZoneSyn::New(::google::protobuf::Arena* arena) const {
  ZoneSyn* n = new ZoneSyn;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZoneSyn::Clear() {
// @@protoc_insertion_point(message_clear_start:ZoneSyn)
  if (GetArenaNoVirtual() == NULL && persion_ != NULL) {
    delete persion_;
  }
  persion_ = NULL;
}

bool ZoneSyn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ZoneSyn)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Persion persion = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_persion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ZoneSyn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ZoneSyn)
  return false;
#undef DO_
}

void ZoneSyn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ZoneSyn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Persion persion = 1;
  if (this->has_persion()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->persion_, output);
  }

  // @@protoc_insertion_point(serialize_end:ZoneSyn)
}

::google::protobuf::uint8* ZoneSyn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ZoneSyn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Persion persion = 1;
  if (this->has_persion()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->persion_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ZoneSyn)
  return target;
}

size_t ZoneSyn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ZoneSyn)
  size_t total_size = 0;

  // .Persion persion = 1;
  if (this->has_persion()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->persion_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZoneSyn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ZoneSyn)
  GOOGLE_DCHECK_NE(&from, this);
  const ZoneSyn* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ZoneSyn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ZoneSyn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ZoneSyn)
    MergeFrom(*source);
  }
}

void ZoneSyn::MergeFrom(const ZoneSyn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ZoneSyn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_persion()) {
    mutable_persion()->::Persion::MergeFrom(from.persion());
  }
}

void ZoneSyn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ZoneSyn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZoneSyn::CopyFrom(const ZoneSyn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ZoneSyn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZoneSyn::IsInitialized() const {
  return true;
}

void ZoneSyn::Swap(ZoneSyn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZoneSyn::InternalSwap(ZoneSyn* other) {
  std::swap(persion_, other->persion_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ZoneSyn::GetMetadata() const {
  protobuf_zonesvr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zonesvr_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZoneSyn

// .Persion persion = 1;
bool ZoneSyn::has_persion() const {
  return this != internal_default_instance() && persion_ != NULL;
}
void ZoneSyn::clear_persion() {
  if (GetArenaNoVirtual() == NULL && persion_ != NULL) delete persion_;
  persion_ = NULL;
}
const ::Persion& ZoneSyn::persion() const {
  // @@protoc_insertion_point(field_get:ZoneSyn.persion)
  return persion_ != NULL ? *persion_
                         : *::Persion::internal_default_instance();
}
::Persion* ZoneSyn::mutable_persion() {
  
  if (persion_ == NULL) {
    persion_ = new ::Persion;
  }
  // @@protoc_insertion_point(field_mutable:ZoneSyn.persion)
  return persion_;
}
::Persion* ZoneSyn::release_persion() {
  // @@protoc_insertion_point(field_release:ZoneSyn.persion)
  
  ::Persion* temp = persion_;
  persion_ = NULL;
  return temp;
}
void ZoneSyn::set_allocated_persion(::Persion* persion) {
  delete persion_;
  persion_ = persion;
  if (persion) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ZoneSyn.persion)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZoneStat::kPersionListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZoneStat::ZoneStat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zonesvr_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ZoneStat)
}
ZoneStat::ZoneStat(const ZoneStat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      persion_list_(from.persion_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ZoneStat)
}

void ZoneStat::SharedCtor() {
  _cached_size_ = 0;
}

ZoneStat::~ZoneStat() {
  // @@protoc_insertion_point(destructor:ZoneStat)
  SharedDtor();
}

void ZoneStat::SharedDtor() {
}

void ZoneStat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZoneStat::descriptor() {
  protobuf_zonesvr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zonesvr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ZoneStat& ZoneStat::default_instance() {
  protobuf_zonesvr_2eproto::InitDefaults();
  return *internal_default_instance();
}

ZoneStat* ZoneStat::New(::google::protobuf::Arena* arena) const {
  ZoneStat* n = new ZoneStat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZoneStat::Clear() {
// @@protoc_insertion_point(message_clear_start:ZoneStat)
  persion_list_.Clear();
}

bool ZoneStat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ZoneStat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Persion persion_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_persion_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ZoneStat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ZoneStat)
  return false;
#undef DO_
}

void ZoneStat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ZoneStat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Persion persion_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->persion_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->persion_list(static_cast<int>(i)), output);
  }

  // @@protoc_insertion_point(serialize_end:ZoneStat)
}

::google::protobuf::uint8* ZoneStat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ZoneStat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Persion persion_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->persion_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->persion_list(static_cast<int>(i)), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ZoneStat)
  return target;
}

size_t ZoneStat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ZoneStat)
  size_t total_size = 0;

  // repeated .Persion persion_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->persion_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->persion_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZoneStat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ZoneStat)
  GOOGLE_DCHECK_NE(&from, this);
  const ZoneStat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ZoneStat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ZoneStat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ZoneStat)
    MergeFrom(*source);
  }
}

void ZoneStat::MergeFrom(const ZoneStat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ZoneStat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  persion_list_.MergeFrom(from.persion_list_);
}

void ZoneStat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ZoneStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZoneStat::CopyFrom(const ZoneStat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ZoneStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZoneStat::IsInitialized() const {
  return true;
}

void ZoneStat::Swap(ZoneStat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZoneStat::InternalSwap(ZoneStat* other) {
  persion_list_.InternalSwap(&other->persion_list_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ZoneStat::GetMetadata() const {
  protobuf_zonesvr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zonesvr_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZoneStat

// repeated .Persion persion_list = 1;
int ZoneStat::persion_list_size() const {
  return persion_list_.size();
}
void ZoneStat::clear_persion_list() {
  persion_list_.Clear();
}
const ::Persion& ZoneStat::persion_list(int index) const {
  // @@protoc_insertion_point(field_get:ZoneStat.persion_list)
  return persion_list_.Get(index);
}
::Persion* ZoneStat::mutable_persion_list(int index) {
  // @@protoc_insertion_point(field_mutable:ZoneStat.persion_list)
  return persion_list_.Mutable(index);
}
::Persion* ZoneStat::add_persion_list() {
  // @@protoc_insertion_point(field_add:ZoneStat.persion_list)
  return persion_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::Persion >*
ZoneStat::mutable_persion_list() {
  // @@protoc_insertion_point(field_mutable_list:ZoneStat.persion_list)
  return &persion_list_;
}
const ::google::protobuf::RepeatedPtrField< ::Persion >&
ZoneStat::persion_list() const {
  // @@protoc_insertion_point(field_list:ZoneStat.persion_list)
  return persion_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatReq::kNameFieldNumber;
const int ChatReq::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatReq::ChatReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zonesvr_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChatReq)
}
ChatReq::ChatReq(const ChatReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  // @@protoc_insertion_point(copy_constructor:ChatReq)
}

void ChatReq::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ChatReq::~ChatReq() {
  // @@protoc_insertion_point(destructor:ChatReq)
  SharedDtor();
}

void ChatReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChatReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatReq::descriptor() {
  protobuf_zonesvr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zonesvr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatReq& ChatReq::default_instance() {
  protobuf_zonesvr_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChatReq* ChatReq::New(::google::protobuf::Arena* arena) const {
  ChatReq* n = new ChatReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatReq)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ChatReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChatReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChatReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChatReq)
  return false;
#undef DO_
}

void ChatReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->name(), output);
  }

  // bytes content = 2;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->content(), output);
  }

  // @@protoc_insertion_point(serialize_end:ChatReq)
}

::google::protobuf::uint8* ChatReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  // bytes content = 2;
  if (this->content().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->content(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ChatReq)
  return target;
}

size_t ChatReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChatReq)
  size_t total_size = 0;

  // bytes name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // bytes content = 2;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->content());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChatReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChatReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChatReq)
    MergeFrom(*source);
  }
}

void ChatReq::MergeFrom(const ChatReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
}

void ChatReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatReq::CopyFrom(const ChatReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatReq::IsInitialized() const {
  return true;
}

void ChatReq::Swap(ChatReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatReq::InternalSwap(ChatReq* other) {
  name_.Swap(&other->name_);
  content_.Swap(&other->content_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatReq::GetMetadata() const {
  protobuf_zonesvr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zonesvr_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatReq

// bytes name = 1;
void ChatReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ChatReq::name() const {
  // @@protoc_insertion_point(field_get:ChatReq.name)
  return name_.GetNoArena();
}
void ChatReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChatReq.name)
}
#if LANG_CXX11
void ChatReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ChatReq.name)
}
#endif
void ChatReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChatReq.name)
}
void ChatReq::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChatReq.name)
}
::std::string* ChatReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ChatReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChatReq::release_name() {
  // @@protoc_insertion_point(field_release:ChatReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChatReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ChatReq.name)
}

// bytes content = 2;
void ChatReq::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ChatReq::content() const {
  // @@protoc_insertion_point(field_get:ChatReq.content)
  return content_.GetNoArena();
}
void ChatReq::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChatReq.content)
}
#if LANG_CXX11
void ChatReq::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ChatReq.content)
}
#endif
void ChatReq::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChatReq.content)
}
void ChatReq::set_content(const void* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChatReq.content)
}
::std::string* ChatReq::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:ChatReq.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChatReq::release_content() {
  // @@protoc_insertion_point(field_release:ChatReq.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChatReq::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:ChatReq.content)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatRsp::kRetFieldNumber;
const int ChatRsp::kErrMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatRsp::ChatRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zonesvr_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChatRsp)
}
ChatRsp::ChatRsp(const ChatRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  err_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.err_msg().size() > 0) {
    err_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_msg_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:ChatRsp)
}

void ChatRsp::SharedCtor() {
  err_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

ChatRsp::~ChatRsp() {
  // @@protoc_insertion_point(destructor:ChatRsp)
  SharedDtor();
}

void ChatRsp::SharedDtor() {
  err_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChatRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatRsp::descriptor() {
  protobuf_zonesvr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zonesvr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatRsp& ChatRsp::default_instance() {
  protobuf_zonesvr_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChatRsp* ChatRsp::New(::google::protobuf::Arena* arena) const {
  ChatRsp* n = new ChatRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatRsp)
  err_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
}

bool ChatRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChatRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes err_msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_err_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChatRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChatRsp)
  return false;
#undef DO_
}

void ChatRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChatRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // bytes err_msg = 2;
  if (this->err_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->err_msg(), output);
  }

  // @@protoc_insertion_point(serialize_end:ChatRsp)
}

::google::protobuf::uint8* ChatRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChatRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // bytes err_msg = 2;
  if (this->err_msg().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->err_msg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ChatRsp)
  return target;
}

size_t ChatRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChatRsp)
  size_t total_size = 0;

  // bytes err_msg = 2;
  if (this->err_msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->err_msg());
  }

  // int32 ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChatRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChatRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChatRsp)
    MergeFrom(*source);
  }
}

void ChatRsp::MergeFrom(const ChatRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.err_msg().size() > 0) {

    err_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_msg_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void ChatRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChatRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatRsp::CopyFrom(const ChatRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatRsp::IsInitialized() const {
  return true;
}

void ChatRsp::Swap(ChatRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatRsp::InternalSwap(ChatRsp* other) {
  err_msg_.Swap(&other->err_msg_);
  std::swap(ret_, other->ret_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatRsp::GetMetadata() const {
  protobuf_zonesvr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zonesvr_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatRsp

// int32 ret = 1;
void ChatRsp::clear_ret() {
  ret_ = 0;
}
::google::protobuf::int32 ChatRsp::ret() const {
  // @@protoc_insertion_point(field_get:ChatRsp.ret)
  return ret_;
}
void ChatRsp::set_ret(::google::protobuf::int32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:ChatRsp.ret)
}

// bytes err_msg = 2;
void ChatRsp::clear_err_msg() {
  err_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ChatRsp::err_msg() const {
  // @@protoc_insertion_point(field_get:ChatRsp.err_msg)
  return err_msg_.GetNoArena();
}
void ChatRsp::set_err_msg(const ::std::string& value) {
  
  err_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChatRsp.err_msg)
}
#if LANG_CXX11
void ChatRsp::set_err_msg(::std::string&& value) {
  
  err_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ChatRsp.err_msg)
}
#endif
void ChatRsp::set_err_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  err_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChatRsp.err_msg)
}
void ChatRsp::set_err_msg(const void* value, size_t size) {
  
  err_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChatRsp.err_msg)
}
::std::string* ChatRsp::mutable_err_msg() {
  
  // @@protoc_insertion_point(field_mutable:ChatRsp.err_msg)
  return err_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChatRsp::release_err_msg() {
  // @@protoc_insertion_point(field_release:ChatRsp.err_msg)
  
  return err_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChatRsp::set_allocated_err_msg(::std::string* err_msg) {
  if (err_msg != NULL) {
    
  } else {
    
  }
  err_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err_msg);
  // @@protoc_insertion_point(field_set_allocated:ChatRsp.err_msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatStat::kSpeakerFieldNumber;
const int ChatStat::kContentFieldNumber;
const int ChatStat::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatStat::ChatStat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zonesvr_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChatStat)
}
ChatStat::ChatStat(const ChatStat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.has_speaker()) {
    speaker_ = new ::Persion(*from.speaker_);
  } else {
    speaker_ = NULL;
  }
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:ChatStat)
}

void ChatStat::SharedCtor() {
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&speaker_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_) -
      reinterpret_cast<char*>(&speaker_)) + sizeof(time_));
  _cached_size_ = 0;
}

ChatStat::~ChatStat() {
  // @@protoc_insertion_point(destructor:ChatStat)
  SharedDtor();
}

void ChatStat::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete speaker_;
  }
}

void ChatStat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatStat::descriptor() {
  protobuf_zonesvr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zonesvr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatStat& ChatStat::default_instance() {
  protobuf_zonesvr_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChatStat* ChatStat::New(::google::protobuf::Arena* arena) const {
  ChatStat* n = new ChatStat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatStat::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatStat)
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && speaker_ != NULL) {
    delete speaker_;
  }
  speaker_ = NULL;
  time_ = 0u;
}

bool ChatStat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChatStat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Persion speaker = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_speaker()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChatStat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChatStat)
  return false;
#undef DO_
}

void ChatStat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChatStat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Persion speaker = 1;
  if (this->has_speaker()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->speaker_, output);
  }

  // bytes content = 2;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->content(), output);
  }

  // uint32 time = 3;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->time(), output);
  }

  // @@protoc_insertion_point(serialize_end:ChatStat)
}

::google::protobuf::uint8* ChatStat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChatStat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Persion speaker = 1;
  if (this->has_speaker()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->speaker_, deterministic, target);
  }

  // bytes content = 2;
  if (this->content().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->content(), target);
  }

  // uint32 time = 3;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->time(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ChatStat)
  return target;
}

size_t ChatStat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChatStat)
  size_t total_size = 0;

  // bytes content = 2;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->content());
  }

  // .Persion speaker = 1;
  if (this->has_speaker()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->speaker_);
  }

  // uint32 time = 3;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatStat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChatStat)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatStat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatStat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChatStat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChatStat)
    MergeFrom(*source);
  }
}

void ChatStat::MergeFrom(const ChatStat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatStat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.has_speaker()) {
    mutable_speaker()->::Persion::MergeFrom(from.speaker());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
}

void ChatStat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChatStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatStat::CopyFrom(const ChatStat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatStat::IsInitialized() const {
  return true;
}

void ChatStat::Swap(ChatStat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatStat::InternalSwap(ChatStat* other) {
  content_.Swap(&other->content_);
  std::swap(speaker_, other->speaker_);
  std::swap(time_, other->time_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatStat::GetMetadata() const {
  protobuf_zonesvr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zonesvr_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatStat

// .Persion speaker = 1;
bool ChatStat::has_speaker() const {
  return this != internal_default_instance() && speaker_ != NULL;
}
void ChatStat::clear_speaker() {
  if (GetArenaNoVirtual() == NULL && speaker_ != NULL) delete speaker_;
  speaker_ = NULL;
}
const ::Persion& ChatStat::speaker() const {
  // @@protoc_insertion_point(field_get:ChatStat.speaker)
  return speaker_ != NULL ? *speaker_
                         : *::Persion::internal_default_instance();
}
::Persion* ChatStat::mutable_speaker() {
  
  if (speaker_ == NULL) {
    speaker_ = new ::Persion;
  }
  // @@protoc_insertion_point(field_mutable:ChatStat.speaker)
  return speaker_;
}
::Persion* ChatStat::release_speaker() {
  // @@protoc_insertion_point(field_release:ChatStat.speaker)
  
  ::Persion* temp = speaker_;
  speaker_ = NULL;
  return temp;
}
void ChatStat::set_allocated_speaker(::Persion* speaker) {
  delete speaker_;
  speaker_ = speaker;
  if (speaker) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ChatStat.speaker)
}

// bytes content = 2;
void ChatStat::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ChatStat::content() const {
  // @@protoc_insertion_point(field_get:ChatStat.content)
  return content_.GetNoArena();
}
void ChatStat::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChatStat.content)
}
#if LANG_CXX11
void ChatStat::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ChatStat.content)
}
#endif
void ChatStat::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChatStat.content)
}
void ChatStat::set_content(const void* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChatStat.content)
}
::std::string* ChatStat::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:ChatStat.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChatStat::release_content() {
  // @@protoc_insertion_point(field_release:ChatStat.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChatStat::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:ChatStat.content)
}

// uint32 time = 3;
void ChatStat::clear_time() {
  time_ = 0u;
}
::google::protobuf::uint32 ChatStat::time() const {
  // @@protoc_insertion_point(field_get:ChatStat.time)
  return time_;
}
void ChatStat::set_time(::google::protobuf::uint32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:ChatStat.time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
